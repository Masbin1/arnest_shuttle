/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.z-0 {
  z-index: 0;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.-mt-\[180px\] {
  margin-top: calc(180px * -1);
}
.mt-\[-280px\] {
  margin-top: -280px;
}
.ml-\[10\%\] {
  margin-left: 10%;
}
.ml-\[30\%\] {
  margin-left: 30%;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.inline-block {
  display: inline-block;
}
.h-\[450px\] {
  height: 450px;
}
.h-\[550px\] {
  height: 550px;
}
.h-\[600px\] {
  height: 600px;
}
.h-\[700px\] {
  height: 700px;
}
.h-full {
  height: 100%;
}
.w-1\/2 {
  width: calc(1/2 * 100%);
}
.w-\[70\%\] {
  width: 70%;
}
.w-\[250px\] {
  width: 250px;
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.max-w-\[800px\] {
  max-width: 800px;
}
.flex-1 {
  flex: 1;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.justify-between {
  justify-content: space-between;
}
.justify-end {
  justify-content: flex-end;
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-tr-full {
  border-top-right-radius: calc(infinity * 1px);
}
.rounded-b-full {
  border-bottom-right-radius: calc(infinity * 1px);
  border-bottom-left-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-\[\#800000\] {
  border-color: #800000;
}
.bg-\[\#800000\] {
  background-color: #800000;
}
.object-cover {
  object-fit: cover;
}
.object-left-top {
  object-position: left top;
}
.text-center {
  text-align: center;
}
.text-\[\#800000\] {
  color: #800000;
}
.italic {
  font-style: italic;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.hover\:bg-\[\#800000\] {
  &:hover {
    @media (hover: hover) {
      background-color: #800000;
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
    }
  }
}
